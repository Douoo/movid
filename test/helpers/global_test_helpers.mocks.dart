// Mocks generated by Mockito 5.4.3 from annotations
// in movid/test/helpers/global_test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i13;
import 'dart:convert' as _i29;
import 'dart:typed_data' as _i28;

import 'package:dartz/dartz.dart' as _i5;
import 'package:hive/hive.dart' as _i11;
import 'package:hive/src/box/default_compaction_strategy.dart' as _i27;
import 'package:hive/src/box/default_key_comparator.dart' as _i26;
import 'package:http/http.dart' as _i12;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i18;
import 'package:movid/core/errors/failure.dart' as _i22;
import 'package:movid/core/network/network_connection.dart' as _i8;
import 'package:movid/features/movies/data/data_sources/movie_local_data_source.dart'
    as _i16;
import 'package:movid/features/movies/data/data_sources/movie_remote_data_source.dart'
    as _i14;
import 'package:movid/features/movies/data/models/media_image_model.dart'
    as _i3;
import 'package:movid/features/movies/data/models/movie_detail_model.dart'
    as _i2;
import 'package:movid/features/movies/data/models/movie_model.dart' as _i15;
import 'package:movid/features/movies/data/models/movie_table.dart' as _i17;
import 'package:movid/features/tv/data/data_sources/tv_series_local_data_source.dart'
    as _i7;
import 'package:movid/features/tv/data/data_sources/tv_series_remote_data_source_impl.dart'
    as _i6;
import 'package:movid/features/tv/data/model/media_image_model.dart'
    as _i10;
import 'package:movid/features/tv/data/model/series_data.dart' as _i20;
import 'package:movid/features/tv/data/model/tv_series_model.dart' as _i19;
import 'package:movid/features/tv/data/repository/series_repository_impl.dart'
    as _i25;
import 'package:movid/features/tv/domain/entites/season_episode.dart'
    as _i24;
import 'package:movid/features/tv/domain/entites/series.dart' as _i23;
import 'package:movid/features/tv/domain/entites/series_detail.dart' as _i9;
import 'package:movid/features/tv/domain/repository/series_repository.dart'
    as _i21;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieDetailModel_0 extends _i1.SmartFake
    implements _i2.MovieDetailModel {
  _FakeMovieDetailModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMediaImageModel_1 extends _i1.SmartFake
    implements _i3.MediaImageModel {
  _FakeMediaImageModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_2 extends _i1.SmartFake implements Duration {
  _FakeDuration_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddressCheckResult_3 extends _i1.SmartFake
    implements _i4.AddressCheckResult {
  _FakeAddressCheckResult_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_4<L, R> extends _i1.SmartFake implements _i5.Either<L, R> {
  _FakeEither_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvRemoteDataSource_5 extends _i1.SmartFake
    implements _i6.TvRemoteDataSource {
  _FakeTvRemoteDataSource_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvLocalDataSource_6 extends _i1.SmartFake
    implements _i7.TvLocalDataSource {
  _FakeTvLocalDataSource_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetworkConnection_7 extends _i1.SmartFake
    implements _i8.NetworkConnection {
  _FakeNetworkConnection_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetail_8 extends _i1.SmartFake implements _i9.TvDetail {
  _FakeTvDetail_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMediaImageModel_9 extends _i1.SmartFake
    implements _i10.MediaImageModel {
  _FakeMediaImageModel_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBox_10<E1> extends _i1.SmartFake implements _i11.Box<E1> {
  _FakeBox_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLazyBox_11<E1> extends _i1.SmartFake implements _i11.LazyBox<E1> {
  _FakeLazyBox_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_12 extends _i1.SmartFake implements _i12.Response {
  _FakeResponse_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_13 extends _i1.SmartFake
    implements _i12.StreamedResponse {
  _FakeStreamedResponse_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkConnection].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkConnection extends _i1.Mock implements _i8.NetworkConnection {
  MockNetworkConnection() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<bool> get isAvailable => (super.noSuchMethod(
        Invocation.getter(#isAvailable),
        returnValue: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i14.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<List<_i15.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue:
            _i13.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i13.Future<List<_i15.MovieModel>>);

  @override
  _i13.Future<List<_i15.MovieModel>> getPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i13.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i13.Future<List<_i15.MovieModel>>);

  @override
  _i13.Future<List<_i15.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i13.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i13.Future<List<_i15.MovieModel>>);

  @override
  _i13.Future<_i2.MovieDetailModel> getMovieDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i13.Future<_i2.MovieDetailModel>.value(_FakeMovieDetailModel_0(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i13.Future<_i2.MovieDetailModel>);

  @override
  _i13.Future<List<_i15.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue:
            _i13.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i13.Future<List<_i15.MovieModel>>);

  @override
  _i13.Future<_i3.MediaImageModel> getMovieImages(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieImages,
          [id],
        ),
        returnValue:
            _i13.Future<_i3.MediaImageModel>.value(_FakeMediaImageModel_1(
          this,
          Invocation.method(
            #getMovieImages,
            [id],
          ),
        )),
      ) as _i13.Future<_i3.MediaImageModel>);

  @override
  _i13.Future<List<_i15.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue:
            _i13.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i13.Future<List<_i15.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i16.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<String> saveWatchlist(_i17.MovieData? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [movie],
        ),
        returnValue: _i13.Future<String>.value(_i18.dummyValue<String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [movie],
          ),
        )),
      ) as _i13.Future<String>);

  @override
  _i13.Future<String> removeWatchlist(_i17.MovieData? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i13.Future<String>.value(_i18.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i13.Future<String>);

  @override
  _i13.Future<bool> hasMovie(int? id) => (super.noSuchMethod(
        Invocation.method(
          #hasMovie,
          [id],
        ),
        returnValue: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  _i13.Future<List<_i15.MovieModel>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue:
            _i13.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i13.Future<List<_i15.MovieModel>>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i7.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<List<_i19.TvModel>> getWatchListTv() => (super.noSuchMethod(
        Invocation.method(
          #getWatchListTv,
          [],
        ),
        returnValue: _i13.Future<List<_i19.TvModel>>.value(<_i19.TvModel>[]),
      ) as _i13.Future<List<_i19.TvModel>>);

  @override
  _i13.Future<bool> addTvToWatchList(_i20.TvData? tv) => (super.noSuchMethod(
        Invocation.method(
          #addTvToWatchList,
          [tv],
        ),
        returnValue: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  _i13.Future<bool> removeWatchListTv(int? id) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchListTv,
          [id],
        ),
        returnValue: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  _i13.Future<bool> isAddedToWatchList(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchList,
          [id],
        ),
        returnValue: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);
}

/// A class which mocks [InternetConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnectionChecker extends _i1.Mock
    implements _i4.InternetConnectionChecker {
  MockInternetConnectionChecker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Duration get checkInterval => (super.noSuchMethod(
        Invocation.getter(#checkInterval),
        returnValue: _FakeDuration_2(
          this,
          Invocation.getter(#checkInterval),
        ),
      ) as Duration);

  @override
  Duration get checkTimeout => (super.noSuchMethod(
        Invocation.getter(#checkTimeout),
        returnValue: _FakeDuration_2(
          this,
          Invocation.getter(#checkTimeout),
        ),
      ) as Duration);

  @override
  List<_i4.AddressCheckOptions> get addresses => (super.noSuchMethod(
        Invocation.getter(#addresses),
        returnValue: <_i4.AddressCheckOptions>[],
      ) as List<_i4.AddressCheckOptions>);

  @override
  set addresses(List<_i4.AddressCheckOptions>? value) => super.noSuchMethod(
        Invocation.setter(
          #addresses,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Future<bool> get hasConnection => (super.noSuchMethod(
        Invocation.getter(#hasConnection),
        returnValue: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  _i13.Future<_i4.InternetConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue: _i13.Future<_i4.InternetConnectionStatus>.value(
            _i4.InternetConnectionStatus.connected),
      ) as _i13.Future<_i4.InternetConnectionStatus>);

  @override
  _i13.Stream<_i4.InternetConnectionStatus> get onStatusChange =>
      (super.noSuchMethod(
        Invocation.getter(#onStatusChange),
        returnValue: _i13.Stream<_i4.InternetConnectionStatus>.empty(),
      ) as _i13.Stream<_i4.InternetConnectionStatus>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get isActivelyChecking => (super.noSuchMethod(
        Invocation.getter(#isActivelyChecking),
        returnValue: false,
      ) as bool);

  @override
  _i13.Future<_i4.AddressCheckResult> isHostReachable(
          _i4.AddressCheckOptions? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #isHostReachable,
          [options],
        ),
        returnValue:
            _i13.Future<_i4.AddressCheckResult>.value(_FakeAddressCheckResult_3(
          this,
          Invocation.method(
            #isHostReachable,
            [options],
          ),
        )),
      ) as _i13.Future<_i4.AddressCheckResult>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i21.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> getOnAirTv(int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnAirTv,
          [page],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #getOnAirTv,
            [page],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> getPopularTv(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTv,
          [page],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #getPopularTv,
            [page],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> getTopRatedTv(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTv,
          [page],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #getTopRatedTv,
            [page],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, _i9.TvDetail>> getDetailTv(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailTv,
          [id],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, _i9.TvDetail>>.value(
            _FakeEither_4<_i22.Failure, _i9.TvDetail>(
          this,
          Invocation.method(
            #getDetailTv,
            [id],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, _i9.TvDetail>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> getRecommendedTv(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedTv,
          [id],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #getRecommendedTv,
            [id],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i24.SeasonEpisode>>>
      getTvSeasonEpisodes(
    int? id,
    int? seasonNumber,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getTvSeasonEpisodes,
              [
                id,
                seasonNumber,
              ],
            ),
            returnValue: _i13.Future<
                    _i5.Either<_i22.Failure, List<_i24.SeasonEpisode>>>.value(
                _FakeEither_4<_i22.Failure, List<_i24.SeasonEpisode>>(
              this,
              Invocation.method(
                #getTvSeasonEpisodes,
                [
                  id,
                  seasonNumber,
                ],
              ),
            )),
          ) as _i13.Future<_i5.Either<_i22.Failure, List<_i24.SeasonEpisode>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> searchTv(
    String? data,
    int? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [
            data,
            page,
          ],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #searchTv,
            [
              data,
              page,
            ],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, _i10.MediaImageModel>> getTvImages(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvImages,
          [id],
        ),
        returnValue:
            _i13.Future<_i5.Either<_i22.Failure, _i10.MediaImageModel>>.value(
                _FakeEither_4<_i22.Failure, _i10.MediaImageModel>(
          this,
          Invocation.method(
            #getTvImages,
            [id],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, _i10.MediaImageModel>>);

  @override
  _i13.Future<bool> isAddedToWatchList(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchList,
          [id],
        ),
        returnValue: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> getWatchListTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchListTv,
          [],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #getWatchListTv,
            [],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, bool>> addTvToWatchList(
          _i9.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTvToWatchList,
          [tv],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, bool>>.value(
            _FakeEither_4<_i22.Failure, bool>(
          this,
          Invocation.method(
            #addTvToWatchList,
            [tv],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, bool>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, bool>> removeWatchListTv(
          _i9.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchListTv,
          [tv],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, bool>>.value(
            _FakeEither_4<_i22.Failure, bool>(
          this,
          Invocation.method(
            #removeWatchListTv,
            [tv],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, bool>>);
}

/// A class which mocks [TvRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepositoryImpl extends _i1.Mock implements _i25.TvRepositoryImpl {
  MockTvRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TvRemoteDataSource get remoteDataSource => (super.noSuchMethod(
        Invocation.getter(#remoteDataSource),
        returnValue: _FakeTvRemoteDataSource_5(
          this,
          Invocation.getter(#remoteDataSource),
        ),
      ) as _i6.TvRemoteDataSource);

  @override
  _i7.TvLocalDataSource get localDataSource => (super.noSuchMethod(
        Invocation.getter(#localDataSource),
        returnValue: _FakeTvLocalDataSource_6(
          this,
          Invocation.getter(#localDataSource),
        ),
      ) as _i7.TvLocalDataSource);

  @override
  _i8.NetworkConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeNetworkConnection_7(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i8.NetworkConnection);

  @override
  _i13.Future<_i5.Either<_i22.Failure, bool>> addTvToWatchList(
          _i9.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTvToWatchList,
          [tv],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, bool>>.value(
            _FakeEither_4<_i22.Failure, bool>(
          this,
          Invocation.method(
            #addTvToWatchList,
            [tv],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, bool>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> getWatchListTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchListTv,
          [],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #getWatchListTv,
            [],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, bool>> removeWatchListTv(
          _i9.TvDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchListTv,
          [tv],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, bool>>.value(
            _FakeEither_4<_i22.Failure, bool>(
          this,
          Invocation.method(
            #removeWatchListTv,
            [tv],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, bool>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, _i9.TvDetail>> getDetailTv(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailTv,
          [id],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, _i9.TvDetail>>.value(
            _FakeEither_4<_i22.Failure, _i9.TvDetail>(
          this,
          Invocation.method(
            #getDetailTv,
            [id],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, _i9.TvDetail>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> getOnAirTv(int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnAirTv,
          [page],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #getOnAirTv,
            [page],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> getPopularTv(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTv,
          [page],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #getPopularTv,
            [page],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> getRecommendedTv(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedTv,
          [id],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #getRecommendedTv,
            [id],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> getTopRatedTv(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTv,
          [page],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #getTopRatedTv,
            [page],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i24.SeasonEpisode>>>
      getTvSeasonEpisodes(
    int? id,
    int? seasonNumber,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getTvSeasonEpisodes,
              [
                id,
                seasonNumber,
              ],
            ),
            returnValue: _i13.Future<
                    _i5.Either<_i22.Failure, List<_i24.SeasonEpisode>>>.value(
                _FakeEither_4<_i22.Failure, List<_i24.SeasonEpisode>>(
              this,
              Invocation.method(
                #getTvSeasonEpisodes,
                [
                  id,
                  seasonNumber,
                ],
              ),
            )),
          ) as _i13.Future<_i5.Either<_i22.Failure, List<_i24.SeasonEpisode>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>> searchTv(
    String? data,
    int? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [
            data,
            page,
          ],
        ),
        returnValue: _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>.value(
            _FakeEither_4<_i22.Failure, List<_i23.Tv>>(
          this,
          Invocation.method(
            #searchTv,
            [
              data,
              page,
            ],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, List<_i23.Tv>>>);

  @override
  _i13.Future<_i5.Either<_i22.Failure, _i10.MediaImageModel>> getTvImages(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvImages,
          [id],
        ),
        returnValue:
            _i13.Future<_i5.Either<_i22.Failure, _i10.MediaImageModel>>.value(
                _FakeEither_4<_i22.Failure, _i10.MediaImageModel>(
          this,
          Invocation.method(
            #getTvImages,
            [id],
          ),
        )),
      ) as _i13.Future<_i5.Either<_i22.Failure, _i10.MediaImageModel>>);

  @override
  _i13.Future<bool> isAddedToWatchList(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchList,
          [id],
        ),
        returnValue: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i6.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<List<_i23.Tv>> getOnAirTv(int? page) => (super.noSuchMethod(
        Invocation.method(
          #getOnAirTv,
          [page],
        ),
        returnValue: _i13.Future<List<_i23.Tv>>.value(<_i23.Tv>[]),
      ) as _i13.Future<List<_i23.Tv>>);

  @override
  _i13.Future<List<_i23.Tv>> getPopularTv(int? page) => (super.noSuchMethod(
        Invocation.method(
          #getPopularTv,
          [page],
        ),
        returnValue: _i13.Future<List<_i23.Tv>>.value(<_i23.Tv>[]),
      ) as _i13.Future<List<_i23.Tv>>);

  @override
  _i13.Future<List<_i23.Tv>> getTopRatedTv(int? page) => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTv,
          [page],
        ),
        returnValue: _i13.Future<List<_i23.Tv>>.value(<_i23.Tv>[]),
      ) as _i13.Future<List<_i23.Tv>>);

  @override
  _i13.Future<_i9.TvDetail> getDetailTv(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getDetailTv,
          [id],
        ),
        returnValue: _i13.Future<_i9.TvDetail>.value(_FakeTvDetail_8(
          this,
          Invocation.method(
            #getDetailTv,
            [id],
          ),
        )),
      ) as _i13.Future<_i9.TvDetail>);

  @override
  _i13.Future<List<_i23.Tv>> getRecommendedTv(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getRecommendedTv,
          [id],
        ),
        returnValue: _i13.Future<List<_i23.Tv>>.value(<_i23.Tv>[]),
      ) as _i13.Future<List<_i23.Tv>>);

  @override
  _i13.Future<List<_i24.SeasonEpisode>> getTvSeasonEpisodes(
    int? id,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvSeasonEpisodes,
          [
            id,
            seasonNumber,
          ],
        ),
        returnValue:
            _i13.Future<List<_i24.SeasonEpisode>>.value(<_i24.SeasonEpisode>[]),
      ) as _i13.Future<List<_i24.SeasonEpisode>>);

  @override
  _i13.Future<List<_i23.Tv>> searchTv(
    String? data,
    int? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [
            data,
            page,
          ],
        ),
        returnValue: _i13.Future<List<_i23.Tv>>.value(<_i23.Tv>[]),
      ) as _i13.Future<List<_i23.Tv>>);

  @override
  _i13.Future<_i10.MediaImageModel> getTvImages(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvImages,
          [id],
        ),
        returnValue:
            _i13.Future<_i10.MediaImageModel>.value(_FakeMediaImageModel_9(
          this,
          Invocation.method(
            #getTvImages,
            [id],
          ),
        )),
      ) as _i13.Future<_i10.MediaImageModel>);
}

/// A class which mocks [HiveInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveInterface extends _i1.Mock implements _i11.HiveInterface {
  MockHiveInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void init(
    String? path, {
    _i11.HiveStorageBackendPreference? backendPreference =
        _i11.HiveStorageBackendPreference.native,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #init,
          [path],
          {#backendPreference: backendPreference},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Future<_i11.Box<E>> openBox<E>(
    String? name, {
    _i11.HiveCipher? encryptionCipher,
    _i11.KeyComparator? keyComparator = _i26.defaultKeyComparator,
    _i11.CompactionStrategy? compactionStrategy =
        _i27.defaultCompactionStrategy,
    bool? crashRecovery = true,
    String? path,
    _i28.Uint8List? bytes,
    String? collection,
    List<int>? encryptionKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #openBox,
          [name],
          {
            #encryptionCipher: encryptionCipher,
            #keyComparator: keyComparator,
            #compactionStrategy: compactionStrategy,
            #crashRecovery: crashRecovery,
            #path: path,
            #bytes: bytes,
            #collection: collection,
            #encryptionKey: encryptionKey,
          },
        ),
        returnValue: _i13.Future<_i11.Box<E>>.value(_FakeBox_10<E>(
          this,
          Invocation.method(
            #openBox,
            [name],
            {
              #encryptionCipher: encryptionCipher,
              #keyComparator: keyComparator,
              #compactionStrategy: compactionStrategy,
              #crashRecovery: crashRecovery,
              #path: path,
              #bytes: bytes,
              #collection: collection,
              #encryptionKey: encryptionKey,
            },
          ),
        )),
      ) as _i13.Future<_i11.Box<E>>);

  @override
  _i13.Future<_i11.LazyBox<E>> openLazyBox<E>(
    String? name, {
    _i11.HiveCipher? encryptionCipher,
    _i11.KeyComparator? keyComparator = _i26.defaultKeyComparator,
    _i11.CompactionStrategy? compactionStrategy =
        _i27.defaultCompactionStrategy,
    bool? crashRecovery = true,
    String? path,
    String? collection,
    List<int>? encryptionKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #openLazyBox,
          [name],
          {
            #encryptionCipher: encryptionCipher,
            #keyComparator: keyComparator,
            #compactionStrategy: compactionStrategy,
            #crashRecovery: crashRecovery,
            #path: path,
            #collection: collection,
            #encryptionKey: encryptionKey,
          },
        ),
        returnValue: _i13.Future<_i11.LazyBox<E>>.value(_FakeLazyBox_11<E>(
          this,
          Invocation.method(
            #openLazyBox,
            [name],
            {
              #encryptionCipher: encryptionCipher,
              #keyComparator: keyComparator,
              #compactionStrategy: compactionStrategy,
              #crashRecovery: crashRecovery,
              #path: path,
              #collection: collection,
              #encryptionKey: encryptionKey,
            },
          ),
        )),
      ) as _i13.Future<_i11.LazyBox<E>>);

  @override
  _i11.Box<E> box<E>(String? name) => (super.noSuchMethod(
        Invocation.method(
          #box,
          [name],
        ),
        returnValue: _FakeBox_10<E>(
          this,
          Invocation.method(
            #box,
            [name],
          ),
        ),
      ) as _i11.Box<E>);

  @override
  _i11.LazyBox<E> lazyBox<E>(String? name) => (super.noSuchMethod(
        Invocation.method(
          #lazyBox,
          [name],
        ),
        returnValue: _FakeLazyBox_11<E>(
          this,
          Invocation.method(
            #lazyBox,
            [name],
          ),
        ),
      ) as _i11.LazyBox<E>);

  @override
  bool isBoxOpen(String? name) => (super.noSuchMethod(
        Invocation.method(
          #isBoxOpen,
          [name],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i13.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> deleteBoxFromDisk(
    String? name, {
    String? path,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBoxFromDisk,
          [name],
          {#path: path},
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> deleteFromDisk() => (super.noSuchMethod(
        Invocation.method(
          #deleteFromDisk,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  List<int> generateSecureKey() => (super.noSuchMethod(
        Invocation.method(
          #generateSecureKey,
          [],
        ),
        returnValue: <int>[],
      ) as List<int>);

  @override
  _i13.Future<bool> boxExists(
    String? name, {
    String? path,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #boxExists,
          [name],
          {#path: path},
        ),
        returnValue: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  void resetAdapters() => super.noSuchMethod(
        Invocation.method(
          #resetAdapters,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerAdapter<T>(
    _i11.TypeAdapter<T>? adapter, {
    bool? internal = false,
    bool? override = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerAdapter,
          [adapter],
          {
            #internal: internal,
            #override: override,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isAdapterRegistered(int? typeId) => (super.noSuchMethod(
        Invocation.method(
          #isAdapterRegistered,
          [typeId],
        ),
        returnValue: false,
      ) as bool);

  @override
  void ignoreTypeId<T>(int? typeId) => super.noSuchMethod(
        Invocation.method(
          #ignoreTypeId,
          [typeId],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i12.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<_i12.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i13.Future<_i12.Response>.value(_FakeResponse_12(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i13.Future<_i12.Response>);

  @override
  _i13.Future<_i12.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i13.Future<_i12.Response>.value(_FakeResponse_12(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i13.Future<_i12.Response>);

  @override
  _i13.Future<_i12.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i13.Future<_i12.Response>.value(_FakeResponse_12(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i13.Future<_i12.Response>);

  @override
  _i13.Future<_i12.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i13.Future<_i12.Response>.value(_FakeResponse_12(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i13.Future<_i12.Response>);

  @override
  _i13.Future<_i12.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i13.Future<_i12.Response>.value(_FakeResponse_12(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i13.Future<_i12.Response>);

  @override
  _i13.Future<_i12.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i29.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i13.Future<_i12.Response>.value(_FakeResponse_12(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i13.Future<_i12.Response>);

  @override
  _i13.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i13.Future<String>.value(_i18.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i13.Future<String>);

  @override
  _i13.Future<_i28.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i13.Future<_i28.Uint8List>.value(_i28.Uint8List(0)),
      ) as _i13.Future<_i28.Uint8List>);

  @override
  _i13.Future<_i12.StreamedResponse> send(_i12.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i13.Future<_i12.StreamedResponse>.value(_FakeStreamedResponse_13(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i13.Future<_i12.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
